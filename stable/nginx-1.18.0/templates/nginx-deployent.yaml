apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.nginx.fullname  }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: nginx
    version: nginx-1.18.0
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app: nginx
      version: nginx-1.18.0
  template:
    metadata:
      labels:
        app: nginx
        version: nginx-1.18.0
    spec:
      containers:
        - name: {{ .Values.nginx.fullname  }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: httpapp
              containerPort: 8877
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: {{ .Values.nginx.liveinitialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: {{ .Values.nginx.readinitialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          volumeMounts:
      {{- if .Values.hostPath.enabled }}
          - mountPath: /data
            name: data
      {{- end }}
          - name: config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: config
            mountPath: /etc/nginx/conf.d/app.conf
            subPath: app.conf
          - name: config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
      volumes:
      - name: config
        configMap:
          name: {{ .Values.nginx.fullname  }}
      {{- if .Values.hostPath.enabled }}
      - name: data
        hostPath:
          path: {{ .Values.hostPath.path }}
          type: {{ .Values.hostPath.type }}
      {{- end }}
      nodeSelector: {{ .Values.nginx.nodeSelector }}

